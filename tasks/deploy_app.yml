---
- name: Clone locally on host before sync on host
  local_action: ansible.builtin.shell rm -rf {{ nodejsapp_src_path }} || true; git clone {{ nodejsapp_repository_url }} {{ nodejsapp_src_path }}
  become: false
  when: nodejsapp_clone_locally

- name: Deploy the nodejs app from a git repository
  git:
    repo: "{{ nodejsapp_repository_url }}"
    dest: "{{ nodejsapp_repository_dest }}"
    force: true
  when: not nodejsapp_clone_locally
  register: deploy_from_public_repository

- name: Deploy the nodejs app from a local repository
  synchronize:
    src: "{{ nodejsapp_src_path }}/"
    dest: "{{ nodejsapp_repository_dest }}"
    owner: no
    rsync_opts:
      - "--exclude=.git"
  when: nodejsapp_clone_locally
  register: deploy_from_local_clone

- name: Register if dependencies directory exists
  stat:
    path: "{{ nodejsapp_repository_dest }}/node_modules"
  register: node_modules_directory

- name: Install app node dependencies
  npm:
    path: "{{ nodejsapp_packages_file_directory }}"
    ci: yes
  when: >
    not node_modules_directory.stat.exists and
    (deploy_from_public_repository.changed or deploy_from_local_clone.changed)

- name: Setup app service
  block:
    - name: Create the application systemd service
      template:
        src: "{{ nodejsapp_service_file_path }}"
        dest: "/etc/systemd/system/{{ nodejsapp_name }}.service"
      register: nodejsapp_service_file_upload

    - name: Systemd Daemon reload
      shell: systemctl daemon-reload
      when: nodejsapp_service_file_upload.changed

    - name: Set app systemd service
      systemd:
        name: "{{ nodejsapp_name }}"
        state: started
        enabled: yes